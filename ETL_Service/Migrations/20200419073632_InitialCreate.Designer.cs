// <auto-generated />
using System;
using ETL_Service.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ETL_Service.Migrations
{
    [DbContext(typeof(ETLMigrationContext))]
    [Migration("20200419073632_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ETL_Service.Models.InfaConnector", b =>
                {
                    b.Property<int>("ConnectorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FromField")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FromInstance")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FromInstanceType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("InfaFolderFldrId")
                        .HasColumnType("int");

                    b.Property<int?>("InfaRepositoryRepId")
                        .HasColumnType("int");

                    b.Property<int?>("InfaWorkflowWkfId")
                        .HasColumnType("int");

                    b.Property<int>("MappingId")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("SessionId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ToField")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ToInstance")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ToInstanceType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("XmlTag")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ConnectorId");

                    b.HasIndex("InfaFolderFldrId");

                    b.HasIndex("InfaRepositoryRepId");

                    b.HasIndex("InfaWorkflowWkfId");

                    b.HasIndex("MappingId");

                    b.HasIndex("SessionId");

                    b.ToTable("InfaConnector");
                });

            modelBuilder.Entity("ETL_Service.Models.InfaFolder", b =>
                {
                    b.Property<int>("FldrId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FldrDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FldrName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("RepId")
                        .HasColumnType("int");

                    b.Property<string>("Shared")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FldrId");

                    b.HasIndex("RepId");

                    b.ToTable("InfaFolder");
                });

            modelBuilder.Entity("ETL_Service.Models.InfaMapping", b =>
                {
                    b.Property<int>("MappingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AssociatedSourceInstance")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Datatype")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Expression")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExpressionType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FieldDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FieldName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Flag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FldrId")
                        .HasColumnType("int");

                    b.Property<string>("InstanceName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InstanceType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LoadTimestamp")
                        .HasColumnType("datetime2");

                    b.Property<string>("MappingDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MappingIsvalid")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MappingName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Porttype")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Precision")
                        .HasColumnType("int");

                    b.Property<int?>("Scale")
                        .HasColumnType("int");

                    b.Property<int?>("SessionId")
                        .HasColumnType("int");

                    b.Property<string>("SortDirection")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SortKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TableattributeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TableattributeValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TargetInstance")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TargetLoadorder")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TransName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TransReusable")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TransType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedTimestamp")
                        .HasColumnType("datetime2");

                    b.Property<string>("XMLTag")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MappingId");

                    b.HasIndex("FldrId");

                    b.HasIndex("SessionId");

                    b.ToTable("InfaMapping");
                });

            modelBuilder.Entity("ETL_Service.Models.InfaRepository", b =>
                {
                    b.Property<int>("RepId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DatabaseType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RepDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RepName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RepId");

                    b.ToTable("InfaRepository");
                });

            modelBuilder.Entity("ETL_Service.Models.InfaSession", b =>
                {
                    b.Property<int>("SessionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SessionDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SessionName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("WkfId")
                        .HasColumnType("int");

                    b.HasKey("SessionId");

                    b.HasIndex("WkfId");

                    b.ToTable("InfaSession");
                });

            modelBuilder.Entity("ETL_Service.Models.InfaSessionConfig", b =>
                {
                    b.Property<int>("SessionConfigId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ConfigAttributeDescValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConfigAttributeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IsDefault")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SessionId")
                        .HasColumnType("int");

                    b.Property<string>("SessionName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("WorkFlowId")
                        .HasColumnType("int");

                    b.Property<string>("XMLTag")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SessionConfigId");

                    b.HasIndex("SessionId");

                    b.HasIndex("WorkFlowId");

                    b.ToTable("InfaSessionConfig");
                });

            modelBuilder.Entity("ETL_Service.Models.InfaWorkflow", b =>
                {
                    b.Property<int>("WkfId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("FldrId")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WkfCol")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WkfDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WkfName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("WkfId");

                    b.HasIndex("FldrId");

                    b.ToTable("InfaWorkflow");
                });

            modelBuilder.Entity("ETL_Service.Models.InfaConnector", b =>
                {
                    b.HasOne("ETL_Service.Models.InfaFolder", null)
                        .WithMany("InfaConnector")
                        .HasForeignKey("InfaFolderFldrId");

                    b.HasOne("ETL_Service.Models.InfaRepository", null)
                        .WithMany("InfaConnector")
                        .HasForeignKey("InfaRepositoryRepId");

                    b.HasOne("ETL_Service.Models.InfaWorkflow", null)
                        .WithMany("InfaConnector")
                        .HasForeignKey("InfaWorkflowWkfId");

                    b.HasOne("ETL_Service.Models.InfaMapping", "Mapping")
                        .WithMany("InfaConnector")
                        .HasForeignKey("MappingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ETL_Service.Models.InfaSession", "Session")
                        .WithMany("InfaConnector")
                        .HasForeignKey("SessionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ETL_Service.Models.InfaFolder", b =>
                {
                    b.HasOne("ETL_Service.Models.InfaRepository", "Rep")
                        .WithMany("InfaFolder")
                        .HasForeignKey("RepId");
                });

            modelBuilder.Entity("ETL_Service.Models.InfaMapping", b =>
                {
                    b.HasOne("ETL_Service.Models.InfaFolder", "Fldr")
                        .WithMany("InfaMapping")
                        .HasForeignKey("FldrId");

                    b.HasOne("ETL_Service.Models.InfaSession", "Session")
                        .WithMany("InfaMapping")
                        .HasForeignKey("SessionId");
                });

            modelBuilder.Entity("ETL_Service.Models.InfaSession", b =>
                {
                    b.HasOne("ETL_Service.Models.InfaWorkflow", "Wkf")
                        .WithMany("InfaSession")
                        .HasForeignKey("WkfId");
                });

            modelBuilder.Entity("ETL_Service.Models.InfaSessionConfig", b =>
                {
                    b.HasOne("ETL_Service.Models.InfaSession", "Session")
                        .WithMany()
                        .HasForeignKey("SessionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ETL_Service.Models.InfaWorkflow", "WorkFlow")
                        .WithMany()
                        .HasForeignKey("WorkFlowId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ETL_Service.Models.InfaWorkflow", b =>
                {
                    b.HasOne("ETL_Service.Models.InfaFolder", "Fldr")
                        .WithMany("InfaWorkflow")
                        .HasForeignKey("FldrId");
                });
#pragma warning restore 612, 618
        }
    }
}
